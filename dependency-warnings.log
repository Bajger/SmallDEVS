Package *SmallDEVS-MyRepository depends on the following classes:
  TranscriptStream
  PrototypeObject
You must resolve these dependencies before you will be able to load these definitions: 
  PrototypeObject>>#eq:
  PrototypeObject>>#excludedSlots
  PrototypeObject>>#sixxOn:name:indent:context:
  PrototypeObject>>#sixxType
  PrototypeObject>>#storeOn:
  PrototypeObjectForMyRepository
  PrototypeObjectForMyRepository>>#actionSelector
  PrototypeObjectForMyRepository>>#addDelegate:
  PrototypeObjectForMyRepository>>#addDelegate:withName:
  PrototypeObjectForMyRepository>>#addExistingDelegate
  PrototypeObjectForMyRepository>>#componentNames
  PrototypeObjectForMyRepository>>#copyToClipboard
  PrototypeObjectForMyRepository>>#cutAction
  PrototypeObjectForMyRepository>>#deleteAction
  PrototypeObjectForMyRepository>>#fileOutAction
  PrototypeObjectForMyRepository>>#fullName
  PrototypeObjectForMyRepository>>#getMenu
  PrototypeObjectForMyRepository>>#name
  PrototypeObjectForMyRepository>>#name:
  PrototypeObjectForMyRepository>>#nameInSimSpace
  PrototypeObjectForMyRepository>>#nameInSimSpace:
  PrototypeObjectForMyRepository>>#parent
  PrototypeObjectForMyRepository>>#parent:
  PrototypeObjectForMyRepository>>#parentInSimSpace
  PrototypeObjectForMyRepository>>#parentInSimSpace:
  PrototypeObjectForMyRepository>>#pasteDelegate
  PrototypeObjectForMyRepository>>#pathName
  PrototypeObjectForMyRepository>>#renameAction
  PrototypeObjectForMyRepository>>#species
  PrototypeObjectForSimulation
  PrototypeObjectWithSources
  SerializablePrototypeObject
  SerializablePrototypeObject>>#excludedSlots
  SerializablePrototypeObject>>#getMethodID:
  SerializablePrototypeObject>>#privatePostClone
  SerializablePrototypeObject>>#sixxOn:name:indent:context:
  SerializablePrototypeObject>>#species
  TranscriptStream>>#nextPutAll:



Package *SmallDEVS-Core depends on the following classes:
  PrototypeObjectForMyRepository
  PrototypeObjectWithSources
You must resolve these dependencies before you will be able to load these definitions: 
  AtomicDEVSTrait
  AtomicDEVSTrait>>#new
  AtomicDEVSTrait>>#initialize
  AtomicDEVSTrait>>#species
  PrototypeObjectWithSharedAtomicBehavior
  PrototypeObjectWithSharedAtomicBehavior>>#elapsed
  PrototypeObjectWithSharedAtomicBehavior>>#name
  PrototypeObjectWithSharedAtomicBehavior>>#name:
  PrototypeObjectWithSharedAtomicBehavior>>#parent
  PrototypeObjectWithSharedAtomicBehavior>>#parent:
  PrototypeObjectWithSharedAtomicBehavior>>#peekFrom:
  PrototypeObjectWithSharedAtomicBehavior>>#poke:to:
  PrototypeObjectWithSharedAtomicBehavior>>#remaining
  PrototypeObjectWithSharedAtomicBehavior>>#signalStateEvent
  PrototypeObjectWithSharedAtomicBehavior>>#species
  PrototypeObjectWithSharedCoupledBehavior
  PrototypeObjectWithSharedCoupledBehavior>>#name
  PrototypeObjectWithSharedCoupledBehavior>>#name:
  PrototypeObjectWithSharedCoupledBehavior>>#parent
  PrototypeObjectWithSharedCoupledBehavior>>#parent:
  PrototypeObjectWithSharedCoupledBehavior>>#species
